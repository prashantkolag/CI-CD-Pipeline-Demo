name: CI - Build Mule App (and publish to Exchange if secrets exist)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest

    # these environment variables are available to steps
    env:
      ANYPOINT_CLIENT_ID: ${{ secrets.ANYPOINT_CLIENT_ID }}
      ANYPOINT_CLIENT_SECRET: ${{ secrets.ANYPOINT_CLIENT_SECRET }}

    steps:
      # 1) checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2) set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      # 3) cache maven repo to speed up builds
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # 4) create Maven settings.xml on the runner (so deploy to Exchange can auth)
      - name: Write Maven settings.xml
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml << 'EOF'
          <settings>
            <servers>
              <server>
                <id>anypoint-exchange</id>
                <username>${env.ANYPOINT_CLIENT_ID}</username>
                <password>${env.ANYPOINT_CLIENT_SECRET}</password>
              </server>
            </servers>
          </settings>
          EOF

      # 5) build (and publish to Exchange if secrets are present)
      - name: Build & (optionally) Publish to Exchange
        run: |
          # if secrets are missing, just build (package) without deploy
          if [ -z "${{ secrets.ANYPOINT_CLIENT_ID }}" ] || [ -z "${{ secrets.ANYPOINT_CLIENT_SECRET }}" ]; then
            echo "No Exchange credentials found; running build only."
            mvn -B clean package -DskipTests
          else
            echo "Exchange credentials found; running build + deploy."
            mvn -B clean deploy -DskipTests
          fi
